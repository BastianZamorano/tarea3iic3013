<!DOCTYPE html>
<html>
  <head>
    <style>
      #map {
        height: 500px;
        width: 100%;
       }
    </style>
  </head>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.1/socket.io.js"></script>
  <body>

    <h3><center>Tarea 3 BZ</center></h3>
    <div id="map"></div>

    <script>
    
    var link = 'wss://integracion-tarea-3.herokuapp.com';
    var socket = io(
        link,
        {
          path: '/flights',
          reconnect: true,
          transports: ['websocket','polling']
        }
      );

    socket.on('connect', () => console.log('CONNECTED'));

    //creación del mapa    
    
      function initMap() {
        var santiago = {lat: -33.447487, lng: -70.673676};
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 4,
          center: santiago
        });

 
         var infowindow = new google.maps.InfoWindow({
               content: 'contentString',
          });
           

      var infowindow = new google.maps.InfoWindow({
        content: 'contentString',
        });
        //var marker = new google.maps.Marker({
        //position: santiago,
        //map: map,
        //icon: image_plane
        //});
        //conexión con los aeropuertos del profe

        var airports = {};
        var flights = {};
        airport_pos = {};
        movement_planes = {};
        mov = {};
        var planes = {};
        var coord = {};
        var image_plane = 'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/Airplane-logo.png/25px-Airplane-logo.png';
        var image_airport = {
        url: 'https://cdn1.iconfinder.com/data/icons/airport-set-1/512/8-512.png', 
        scaledSize: new google.maps.Size(22, 32),     
        };
        var infoAirport = [];
        var infoAirplane = [];
        



        socket.on('POSITION',(position) => {
          for (var i in planes) {
            if(planes[i]['code'] == position['code']) {
              mapa = new google.maps.LatLng(position['position'][0],position['position'][1]);
              planes[i]['position'].push(mapa);
              coord[i].setPosition(mapa);
              movement_planes[position['code']].setPath(planes[i]['position']);
             }
            };
          });


        socket.emit('AIRPORTS');
        socket.on('AIRPORTS',(airport) => {
          for(var i in airport) {
            airports[i]=airport[i]['airport_position'];
            var airport_pos=new google.maps.Marker({
                position: {lat: airport[i]['airport_position'][0], lng: airport[i]['airport_position'][1]},
                map: map,
                icon: image_airport
              });

            airport_pos.addListener('click', function() {
            infowindow.setContent(`<h3>Aeropuerto</h3>${i}<p>${airport[i]['city']}<p>${airport[i]['country']}`);
            infowindow.open(map, airport_pos);
            });

            };
         });

       
        socket.emit('FLIGHTS');
        socket.on('FLIGHTS',(flight) => {
          for(var i in flight) {
            planes[i]=flight[i];
            planes[i]['position']=[];
            new google.maps.Polyline({
              path: [
                new google.maps.LatLng(planes[i]['origin']['airport_position'][0], planes[i]['origin']['airport_position'][1]),
                new google.maps.LatLng(planes[i]['destination']['airport_position'][0], planes[i]['destination']['airport_position'][1])
              ],
              geodesic: true,
              strokeColor: '#FF00FF',
              strokeOpacity: 2.0,
              strokeWeight: 2.5,
              map: map
            });

            var road = new google.maps.Polyline({
              path: [
                new google.maps.LatLng(planes[i]['origin']['airport_position'][0], planes[i]['origin']['airport_position'][1]),
              ],
              geodesic: true,
              strokeColor: '#8B4513',
              strokeOpacity: 2.0,
              strokeWeight: 2.5,
              map: map 
            });
            movement_planes[planes[i]['code']] = road;
            var plane_pos = new google.maps.Marker({
              position: new google.maps.LatLng(planes[i]['origin']['airport_position'][0], planes[i]['origin']['airport_position'][1]),
              map: map,
              icon: image_plane  
          });
          coord[i]=plane_pos;

        };
      });
      };
    </script>

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBAb9M0nNrwGqV7C3v3A8n8POr1u6I-8sw&callback=initMap">
    </script>
  </body>
</html>



